// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PersonFactory.proto

package com.conflict.onedb.server;

public final class MessageReturnProto {
  private MessageReturnProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MessageReturnOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 msgID = 1;
    /**
     * <code>required int32 msgID = 1;</code>
     *
     * <pre>
     *信息的唯一标示
     * </pre>
     */
    boolean hasMsgID();
    /**
     * <code>required int32 msgID = 1;</code>
     *
     * <pre>
     *信息的唯一标示
     * </pre>
     */
    int getMsgID();

    // required int64 timestamp = 2;
    /**
     * <code>required int64 timestamp = 2;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>required int64 timestamp = 2;</code>
     */
    long getTimestamp();

    // required float qps = 3;
    /**
     * <code>required float qps = 3;</code>
     */
    boolean hasQps();
    /**
     * <code>required float qps = 3;</code>
     */
    float getQps();

    // required float rtime1 = 4;
    /**
     * <code>required float rtime1 = 4;</code>
     */
    boolean hasRtime1();
    /**
     * <code>required float rtime1 = 4;</code>
     */
    float getRtime1();

    // required float rtime2 = 5;
    /**
     * <code>required float rtime2 = 5;</code>
     */
    boolean hasRtime2();
    /**
     * <code>required float rtime2 = 5;</code>
     */
    float getRtime2();

    // required float rtime3 = 6;
    /**
     * <code>required float rtime3 = 6;</code>
     */
    boolean hasRtime3();
    /**
     * <code>required float rtime3 = 6;</code>
     */
    float getRtime3();

    // required float rtime4 = 7;
    /**
     * <code>required float rtime4 = 7;</code>
     */
    boolean hasRtime4();
    /**
     * <code>required float rtime4 = 7;</code>
     */
    float getRtime4();

    // required float rtime5 = 8;
    /**
     * <code>required float rtime5 = 8;</code>
     */
    boolean hasRtime5();
    /**
     * <code>required float rtime5 = 8;</code>
     */
    float getRtime5();

    // required float tps = 9;
    /**
     * <code>required float tps = 9;</code>
     */
    boolean hasTps();
    /**
     * <code>required float tps = 9;</code>
     */
    float getTps();

    // required int64 secksucesscount = 10;
    /**
     * <code>required int64 secksucesscount = 10;</code>
     */
    boolean hasSecksucesscount();
    /**
     * <code>required int64 secksucesscount = 10;</code>
     */
    long getSecksucesscount();

    // required int64 nosecksucesscount = 11;
    /**
     * <code>required int64 nosecksucesscount = 11;</code>
     */
    boolean hasNosecksucesscount();
    /**
     * <code>required int64 nosecksucesscount = 11;</code>
     */
    long getNosecksucesscount();

    // required int64 seckfailcount = 12;
    /**
     * <code>required int64 seckfailcount = 12;</code>
     */
    boolean hasSeckfailcount();
    /**
     * <code>required int64 seckfailcount = 12;</code>
     */
    long getSeckfailcount();

    // required int64 noseckfailcount = 13;
    /**
     * <code>required int64 noseckfailcount = 13;</code>
     */
    boolean hasNoseckfailcount();
    /**
     * <code>required int64 noseckfailcount = 13;</code>
     */
    long getNoseckfailcount();

    // required int64 queuefailcount = 14;
    /**
     * <code>required int64 queuefailcount = 14;</code>
     */
    boolean hasQueuefailcount();
    /**
     * <code>required int64 queuefailcount = 14;</code>
     */
    long getQueuefailcount();

    // required float wtime1 = 15;
    /**
     * <code>required float wtime1 = 15;</code>
     */
    boolean hasWtime1();
    /**
     * <code>required float wtime1 = 15;</code>
     */
    float getWtime1();

    // required float wtime2 = 16;
    /**
     * <code>required float wtime2 = 16;</code>
     */
    boolean hasWtime2();
    /**
     * <code>required float wtime2 = 16;</code>
     */
    float getWtime2();

    // required float wtime3 = 17;
    /**
     * <code>required float wtime3 = 17;</code>
     */
    boolean hasWtime3();
    /**
     * <code>required float wtime3 = 17;</code>
     */
    float getWtime3();

    // required float wtime4 = 18;
    /**
     * <code>required float wtime4 = 18;</code>
     */
    boolean hasWtime4();
    /**
     * <code>required float wtime4 = 18;</code>
     */
    float getWtime4();

    // required float wtime5 = 19;
    /**
     * <code>required float wtime5 = 19;</code>
     */
    boolean hasWtime5();
    /**
     * <code>required float wtime5 = 19;</code>
     */
    float getWtime5();

    // required float wtime6 = 20;
    /**
     * <code>required float wtime6 = 20;</code>
     */
    boolean hasWtime6();
    /**
     * <code>required float wtime6 = 20;</code>
     */
    float getWtime6();

    // required float wtime7 = 21;
    /**
     * <code>required float wtime7 = 21;</code>
     */
    boolean hasWtime7();
    /**
     * <code>required float wtime7 = 21;</code>
     */
    float getWtime7();

    // required float wtime8 = 22;
    /**
     * <code>required float wtime8 = 22;</code>
     */
    boolean hasWtime8();
    /**
     * <code>required float wtime8 = 22;</code>
     */
    float getWtime8();

    // required float rtime6 = 23;
    /**
     * <code>required float rtime6 = 23;</code>
     */
    boolean hasRtime6();
    /**
     * <code>required float rtime6 = 23;</code>
     */
    float getRtime6();

    // required float rctime1 = 24;
    /**
     * <code>required float rctime1 = 24;</code>
     */
    boolean hasRctime1();
    /**
     * <code>required float rctime1 = 24;</code>
     */
    float getRctime1();

    // required float rctime2 = 25;
    /**
     * <code>required float rctime2 = 25;</code>
     */
    boolean hasRctime2();
    /**
     * <code>required float rctime2 = 25;</code>
     */
    float getRctime2();

    // required float rctime3 = 26;
    /**
     * <code>required float rctime3 = 26;</code>
     */
    boolean hasRctime3();
    /**
     * <code>required float rctime3 = 26;</code>
     */
    float getRctime3();

    // required float rctime4 = 27;
    /**
     * <code>required float rctime4 = 27;</code>
     */
    boolean hasRctime4();
    /**
     * <code>required float rctime4 = 27;</code>
     */
    float getRctime4();

    // required float rctime5 = 28;
    /**
     * <code>required float rctime5 = 28;</code>
     */
    boolean hasRctime5();
    /**
     * <code>required float rctime5 = 28;</code>
     */
    float getRctime5();

    // required float rctime6 = 29;
    /**
     * <code>required float rctime6 = 29;</code>
     */
    boolean hasRctime6();
    /**
     * <code>required float rctime6 = 29;</code>
     */
    float getRctime6();

    // required float wctime1 = 30;
    /**
     * <code>required float wctime1 = 30;</code>
     */
    boolean hasWctime1();
    /**
     * <code>required float wctime1 = 30;</code>
     */
    float getWctime1();

    // required float wctime2 = 31;
    /**
     * <code>required float wctime2 = 31;</code>
     */
    boolean hasWctime2();
    /**
     * <code>required float wctime2 = 31;</code>
     */
    float getWctime2();

    // required float wctime3 = 32;
    /**
     * <code>required float wctime3 = 32;</code>
     */
    boolean hasWctime3();
    /**
     * <code>required float wctime3 = 32;</code>
     */
    float getWctime3();

    // required float wctime4 = 33;
    /**
     * <code>required float wctime4 = 33;</code>
     */
    boolean hasWctime4();
    /**
     * <code>required float wctime4 = 33;</code>
     */
    float getWctime4();
  }
  /**
   * Protobuf type {@code MessageReturn}
   */
  public static final class MessageReturn extends
      com.google.protobuf.GeneratedMessage
      implements MessageReturnOrBuilder {
    // Use MessageReturn.newBuilder() to construct.
    private MessageReturn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MessageReturn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MessageReturn defaultInstance;
    public static MessageReturn getDefaultInstance() {
      return defaultInstance;
    }

    public MessageReturn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MessageReturn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              msgID_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readInt64();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              qps_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              rtime1_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              rtime2_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              rtime3_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              rtime4_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              rtime5_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              tps_ = input.readFloat();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              secksucesscount_ = input.readInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              nosecksucesscount_ = input.readInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              seckfailcount_ = input.readInt64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              noseckfailcount_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              queuefailcount_ = input.readInt64();
              break;
            }
            case 125: {
              bitField0_ |= 0x00004000;
              wtime1_ = input.readFloat();
              break;
            }
            case 133: {
              bitField0_ |= 0x00008000;
              wtime2_ = input.readFloat();
              break;
            }
            case 141: {
              bitField0_ |= 0x00010000;
              wtime3_ = input.readFloat();
              break;
            }
            case 149: {
              bitField0_ |= 0x00020000;
              wtime4_ = input.readFloat();
              break;
            }
            case 157: {
              bitField0_ |= 0x00040000;
              wtime5_ = input.readFloat();
              break;
            }
            case 165: {
              bitField0_ |= 0x00080000;
              wtime6_ = input.readFloat();
              break;
            }
            case 173: {
              bitField0_ |= 0x00100000;
              wtime7_ = input.readFloat();
              break;
            }
            case 181: {
              bitField0_ |= 0x00200000;
              wtime8_ = input.readFloat();
              break;
            }
            case 189: {
              bitField0_ |= 0x00400000;
              rtime6_ = input.readFloat();
              break;
            }
            case 197: {
              bitField0_ |= 0x00800000;
              rctime1_ = input.readFloat();
              break;
            }
            case 205: {
              bitField0_ |= 0x01000000;
              rctime2_ = input.readFloat();
              break;
            }
            case 213: {
              bitField0_ |= 0x02000000;
              rctime3_ = input.readFloat();
              break;
            }
            case 221: {
              bitField0_ |= 0x04000000;
              rctime4_ = input.readFloat();
              break;
            }
            case 229: {
              bitField0_ |= 0x08000000;
              rctime5_ = input.readFloat();
              break;
            }
            case 237: {
              bitField0_ |= 0x10000000;
              rctime6_ = input.readFloat();
              break;
            }
            case 245: {
              bitField0_ |= 0x20000000;
              wctime1_ = input.readFloat();
              break;
            }
            case 253: {
              bitField0_ |= 0x40000000;
              wctime2_ = input.readFloat();
              break;
            }
            case 261: {
              bitField0_ |= 0x80000000;
              wctime3_ = input.readFloat();
              break;
            }
            case 269: {
              bitField1_ |= 0x00000001;
              wctime4_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.conflict.onedb.server.MessageReturnProto.internal_static_MessageReturn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.conflict.onedb.server.MessageReturnProto.internal_static_MessageReturn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.conflict.onedb.server.MessageReturnProto.MessageReturn.class, com.conflict.onedb.server.MessageReturnProto.MessageReturn.Builder.class);
    }

    public static com.google.protobuf.Parser<MessageReturn> PARSER =
        new com.google.protobuf.AbstractParser<MessageReturn>() {
      public MessageReturn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MessageReturn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MessageReturn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    // required int32 msgID = 1;
    public static final int MSGID_FIELD_NUMBER = 1;
    private int msgID_;
    /**
     * <code>required int32 msgID = 1;</code>
     *
     * <pre>
     *信息的唯一标示
     * </pre>
     */
    public boolean hasMsgID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 msgID = 1;</code>
     *
     * <pre>
     *信息的唯一标示
     * </pre>
     */
    public int getMsgID() {
      return msgID_;
    }

    // required int64 timestamp = 2;
    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timestamp_;
    /**
     * <code>required int64 timestamp = 2;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 timestamp = 2;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    // required float qps = 3;
    public static final int QPS_FIELD_NUMBER = 3;
    private float qps_;
    /**
     * <code>required float qps = 3;</code>
     */
    public boolean hasQps() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float qps = 3;</code>
     */
    public float getQps() {
      return qps_;
    }

    // required float rtime1 = 4;
    public static final int RTIME1_FIELD_NUMBER = 4;
    private float rtime1_;
    /**
     * <code>required float rtime1 = 4;</code>
     */
    public boolean hasRtime1() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required float rtime1 = 4;</code>
     */
    public float getRtime1() {
      return rtime1_;
    }

    // required float rtime2 = 5;
    public static final int RTIME2_FIELD_NUMBER = 5;
    private float rtime2_;
    /**
     * <code>required float rtime2 = 5;</code>
     */
    public boolean hasRtime2() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required float rtime2 = 5;</code>
     */
    public float getRtime2() {
      return rtime2_;
    }

    // required float rtime3 = 6;
    public static final int RTIME3_FIELD_NUMBER = 6;
    private float rtime3_;
    /**
     * <code>required float rtime3 = 6;</code>
     */
    public boolean hasRtime3() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required float rtime3 = 6;</code>
     */
    public float getRtime3() {
      return rtime3_;
    }

    // required float rtime4 = 7;
    public static final int RTIME4_FIELD_NUMBER = 7;
    private float rtime4_;
    /**
     * <code>required float rtime4 = 7;</code>
     */
    public boolean hasRtime4() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required float rtime4 = 7;</code>
     */
    public float getRtime4() {
      return rtime4_;
    }

    // required float rtime5 = 8;
    public static final int RTIME5_FIELD_NUMBER = 8;
    private float rtime5_;
    /**
     * <code>required float rtime5 = 8;</code>
     */
    public boolean hasRtime5() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required float rtime5 = 8;</code>
     */
    public float getRtime5() {
      return rtime5_;
    }

    // required float tps = 9;
    public static final int TPS_FIELD_NUMBER = 9;
    private float tps_;
    /**
     * <code>required float tps = 9;</code>
     */
    public boolean hasTps() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required float tps = 9;</code>
     */
    public float getTps() {
      return tps_;
    }

    // required int64 secksucesscount = 10;
    public static final int SECKSUCESSCOUNT_FIELD_NUMBER = 10;
    private long secksucesscount_;
    /**
     * <code>required int64 secksucesscount = 10;</code>
     */
    public boolean hasSecksucesscount() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int64 secksucesscount = 10;</code>
     */
    public long getSecksucesscount() {
      return secksucesscount_;
    }

    // required int64 nosecksucesscount = 11;
    public static final int NOSECKSUCESSCOUNT_FIELD_NUMBER = 11;
    private long nosecksucesscount_;
    /**
     * <code>required int64 nosecksucesscount = 11;</code>
     */
    public boolean hasNosecksucesscount() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required int64 nosecksucesscount = 11;</code>
     */
    public long getNosecksucesscount() {
      return nosecksucesscount_;
    }

    // required int64 seckfailcount = 12;
    public static final int SECKFAILCOUNT_FIELD_NUMBER = 12;
    private long seckfailcount_;
    /**
     * <code>required int64 seckfailcount = 12;</code>
     */
    public boolean hasSeckfailcount() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required int64 seckfailcount = 12;</code>
     */
    public long getSeckfailcount() {
      return seckfailcount_;
    }

    // required int64 noseckfailcount = 13;
    public static final int NOSECKFAILCOUNT_FIELD_NUMBER = 13;
    private long noseckfailcount_;
    /**
     * <code>required int64 noseckfailcount = 13;</code>
     */
    public boolean hasNoseckfailcount() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required int64 noseckfailcount = 13;</code>
     */
    public long getNoseckfailcount() {
      return noseckfailcount_;
    }

    // required int64 queuefailcount = 14;
    public static final int QUEUEFAILCOUNT_FIELD_NUMBER = 14;
    private long queuefailcount_;
    /**
     * <code>required int64 queuefailcount = 14;</code>
     */
    public boolean hasQueuefailcount() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required int64 queuefailcount = 14;</code>
     */
    public long getQueuefailcount() {
      return queuefailcount_;
    }

    // required float wtime1 = 15;
    public static final int WTIME1_FIELD_NUMBER = 15;
    private float wtime1_;
    /**
     * <code>required float wtime1 = 15;</code>
     */
    public boolean hasWtime1() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required float wtime1 = 15;</code>
     */
    public float getWtime1() {
      return wtime1_;
    }

    // required float wtime2 = 16;
    public static final int WTIME2_FIELD_NUMBER = 16;
    private float wtime2_;
    /**
     * <code>required float wtime2 = 16;</code>
     */
    public boolean hasWtime2() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>required float wtime2 = 16;</code>
     */
    public float getWtime2() {
      return wtime2_;
    }

    // required float wtime3 = 17;
    public static final int WTIME3_FIELD_NUMBER = 17;
    private float wtime3_;
    /**
     * <code>required float wtime3 = 17;</code>
     */
    public boolean hasWtime3() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>required float wtime3 = 17;</code>
     */
    public float getWtime3() {
      return wtime3_;
    }

    // required float wtime4 = 18;
    public static final int WTIME4_FIELD_NUMBER = 18;
    private float wtime4_;
    /**
     * <code>required float wtime4 = 18;</code>
     */
    public boolean hasWtime4() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>required float wtime4 = 18;</code>
     */
    public float getWtime4() {
      return wtime4_;
    }

    // required float wtime5 = 19;
    public static final int WTIME5_FIELD_NUMBER = 19;
    private float wtime5_;
    /**
     * <code>required float wtime5 = 19;</code>
     */
    public boolean hasWtime5() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>required float wtime5 = 19;</code>
     */
    public float getWtime5() {
      return wtime5_;
    }

    // required float wtime6 = 20;
    public static final int WTIME6_FIELD_NUMBER = 20;
    private float wtime6_;
    /**
     * <code>required float wtime6 = 20;</code>
     */
    public boolean hasWtime6() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>required float wtime6 = 20;</code>
     */
    public float getWtime6() {
      return wtime6_;
    }

    // required float wtime7 = 21;
    public static final int WTIME7_FIELD_NUMBER = 21;
    private float wtime7_;
    /**
     * <code>required float wtime7 = 21;</code>
     */
    public boolean hasWtime7() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>required float wtime7 = 21;</code>
     */
    public float getWtime7() {
      return wtime7_;
    }

    // required float wtime8 = 22;
    public static final int WTIME8_FIELD_NUMBER = 22;
    private float wtime8_;
    /**
     * <code>required float wtime8 = 22;</code>
     */
    public boolean hasWtime8() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>required float wtime8 = 22;</code>
     */
    public float getWtime8() {
      return wtime8_;
    }

    // required float rtime6 = 23;
    public static final int RTIME6_FIELD_NUMBER = 23;
    private float rtime6_;
    /**
     * <code>required float rtime6 = 23;</code>
     */
    public boolean hasRtime6() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>required float rtime6 = 23;</code>
     */
    public float getRtime6() {
      return rtime6_;
    }

    // required float rctime1 = 24;
    public static final int RCTIME1_FIELD_NUMBER = 24;
    private float rctime1_;
    /**
     * <code>required float rctime1 = 24;</code>
     */
    public boolean hasRctime1() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>required float rctime1 = 24;</code>
     */
    public float getRctime1() {
      return rctime1_;
    }

    // required float rctime2 = 25;
    public static final int RCTIME2_FIELD_NUMBER = 25;
    private float rctime2_;
    /**
     * <code>required float rctime2 = 25;</code>
     */
    public boolean hasRctime2() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>required float rctime2 = 25;</code>
     */
    public float getRctime2() {
      return rctime2_;
    }

    // required float rctime3 = 26;
    public static final int RCTIME3_FIELD_NUMBER = 26;
    private float rctime3_;
    /**
     * <code>required float rctime3 = 26;</code>
     */
    public boolean hasRctime3() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>required float rctime3 = 26;</code>
     */
    public float getRctime3() {
      return rctime3_;
    }

    // required float rctime4 = 27;
    public static final int RCTIME4_FIELD_NUMBER = 27;
    private float rctime4_;
    /**
     * <code>required float rctime4 = 27;</code>
     */
    public boolean hasRctime4() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>required float rctime4 = 27;</code>
     */
    public float getRctime4() {
      return rctime4_;
    }

    // required float rctime5 = 28;
    public static final int RCTIME5_FIELD_NUMBER = 28;
    private float rctime5_;
    /**
     * <code>required float rctime5 = 28;</code>
     */
    public boolean hasRctime5() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>required float rctime5 = 28;</code>
     */
    public float getRctime5() {
      return rctime5_;
    }

    // required float rctime6 = 29;
    public static final int RCTIME6_FIELD_NUMBER = 29;
    private float rctime6_;
    /**
     * <code>required float rctime6 = 29;</code>
     */
    public boolean hasRctime6() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>required float rctime6 = 29;</code>
     */
    public float getRctime6() {
      return rctime6_;
    }

    // required float wctime1 = 30;
    public static final int WCTIME1_FIELD_NUMBER = 30;
    private float wctime1_;
    /**
     * <code>required float wctime1 = 30;</code>
     */
    public boolean hasWctime1() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>required float wctime1 = 30;</code>
     */
    public float getWctime1() {
      return wctime1_;
    }

    // required float wctime2 = 31;
    public static final int WCTIME2_FIELD_NUMBER = 31;
    private float wctime2_;
    /**
     * <code>required float wctime2 = 31;</code>
     */
    public boolean hasWctime2() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>required float wctime2 = 31;</code>
     */
    public float getWctime2() {
      return wctime2_;
    }

    // required float wctime3 = 32;
    public static final int WCTIME3_FIELD_NUMBER = 32;
    private float wctime3_;
    /**
     * <code>required float wctime3 = 32;</code>
     */
    public boolean hasWctime3() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>required float wctime3 = 32;</code>
     */
    public float getWctime3() {
      return wctime3_;
    }

    // required float wctime4 = 33;
    public static final int WCTIME4_FIELD_NUMBER = 33;
    private float wctime4_;
    /**
     * <code>required float wctime4 = 33;</code>
     */
    public boolean hasWctime4() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float wctime4 = 33;</code>
     */
    public float getWctime4() {
      return wctime4_;
    }

    private void initFields() {
      msgID_ = 0;
      timestamp_ = 0L;
      qps_ = 0F;
      rtime1_ = 0F;
      rtime2_ = 0F;
      rtime3_ = 0F;
      rtime4_ = 0F;
      rtime5_ = 0F;
      tps_ = 0F;
      secksucesscount_ = 0L;
      nosecksucesscount_ = 0L;
      seckfailcount_ = 0L;
      noseckfailcount_ = 0L;
      queuefailcount_ = 0L;
      wtime1_ = 0F;
      wtime2_ = 0F;
      wtime3_ = 0F;
      wtime4_ = 0F;
      wtime5_ = 0F;
      wtime6_ = 0F;
      wtime7_ = 0F;
      wtime8_ = 0F;
      rtime6_ = 0F;
      rctime1_ = 0F;
      rctime2_ = 0F;
      rctime3_ = 0F;
      rctime4_ = 0F;
      rctime5_ = 0F;
      rctime6_ = 0F;
      wctime1_ = 0F;
      wctime2_ = 0F;
      wctime3_ = 0F;
      wctime4_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMsgID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQps()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRtime1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRtime2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRtime3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRtime4()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRtime5()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTps()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSecksucesscount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNosecksucesscount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSeckfailcount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNoseckfailcount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQueuefailcount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWtime1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWtime2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWtime3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWtime4()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWtime5()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWtime6()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWtime7()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWtime8()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRtime6()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRctime1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRctime2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRctime3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRctime4()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRctime5()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRctime6()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWctime1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWctime2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWctime3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWctime4()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, msgID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, qps_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, rtime1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, rtime2_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, rtime3_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, rtime4_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, rtime5_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, tps_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(10, secksucesscount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(11, nosecksucesscount_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(12, seckfailcount_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, noseckfailcount_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, queuefailcount_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(15, wtime1_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeFloat(16, wtime2_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeFloat(17, wtime3_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeFloat(18, wtime4_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeFloat(19, wtime5_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeFloat(20, wtime6_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeFloat(21, wtime7_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeFloat(22, wtime8_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeFloat(23, rtime6_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeFloat(24, rctime1_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeFloat(25, rctime2_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeFloat(26, rctime3_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeFloat(27, rctime4_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeFloat(28, rctime5_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeFloat(29, rctime6_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeFloat(30, wctime1_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeFloat(31, wctime2_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeFloat(32, wctime3_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(33, wctime4_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, msgID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, qps_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, rtime1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, rtime2_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, rtime3_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, rtime4_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, rtime5_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, tps_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, secksucesscount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, nosecksucesscount_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, seckfailcount_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, noseckfailcount_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, queuefailcount_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, wtime1_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, wtime2_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(17, wtime3_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(18, wtime4_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(19, wtime5_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(20, wtime6_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(21, wtime7_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(22, wtime8_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(23, rtime6_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(24, rctime1_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(25, rctime2_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(26, rctime3_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(27, rctime4_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(28, rctime5_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(29, rctime6_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(30, wctime1_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(31, wctime2_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(32, wctime3_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(33, wctime4_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.conflict.onedb.server.MessageReturnProto.MessageReturn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.conflict.onedb.server.MessageReturnProto.MessageReturn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.conflict.onedb.server.MessageReturnProto.MessageReturn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.conflict.onedb.server.MessageReturnProto.MessageReturn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.conflict.onedb.server.MessageReturnProto.MessageReturn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.conflict.onedb.server.MessageReturnProto.MessageReturn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.conflict.onedb.server.MessageReturnProto.MessageReturn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.conflict.onedb.server.MessageReturnProto.MessageReturn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.conflict.onedb.server.MessageReturnProto.MessageReturn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.conflict.onedb.server.MessageReturnProto.MessageReturn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.conflict.onedb.server.MessageReturnProto.MessageReturn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MessageReturn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.conflict.onedb.server.MessageReturnProto.MessageReturnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.conflict.onedb.server.MessageReturnProto.internal_static_MessageReturn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.conflict.onedb.server.MessageReturnProto.internal_static_MessageReturn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.conflict.onedb.server.MessageReturnProto.MessageReturn.class, com.conflict.onedb.server.MessageReturnProto.MessageReturn.Builder.class);
      }

      // Construct using com.conflict.onedb.server.MessageReturnProto.MessageReturn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        qps_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        rtime1_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        rtime2_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        rtime3_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        rtime4_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        rtime5_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        tps_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        secksucesscount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        nosecksucesscount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        seckfailcount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        noseckfailcount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        queuefailcount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        wtime1_ = 0F;
        bitField0_ = (bitField0_ & ~0x00004000);
        wtime2_ = 0F;
        bitField0_ = (bitField0_ & ~0x00008000);
        wtime3_ = 0F;
        bitField0_ = (bitField0_ & ~0x00010000);
        wtime4_ = 0F;
        bitField0_ = (bitField0_ & ~0x00020000);
        wtime5_ = 0F;
        bitField0_ = (bitField0_ & ~0x00040000);
        wtime6_ = 0F;
        bitField0_ = (bitField0_ & ~0x00080000);
        wtime7_ = 0F;
        bitField0_ = (bitField0_ & ~0x00100000);
        wtime8_ = 0F;
        bitField0_ = (bitField0_ & ~0x00200000);
        rtime6_ = 0F;
        bitField0_ = (bitField0_ & ~0x00400000);
        rctime1_ = 0F;
        bitField0_ = (bitField0_ & ~0x00800000);
        rctime2_ = 0F;
        bitField0_ = (bitField0_ & ~0x01000000);
        rctime3_ = 0F;
        bitField0_ = (bitField0_ & ~0x02000000);
        rctime4_ = 0F;
        bitField0_ = (bitField0_ & ~0x04000000);
        rctime5_ = 0F;
        bitField0_ = (bitField0_ & ~0x08000000);
        rctime6_ = 0F;
        bitField0_ = (bitField0_ & ~0x10000000);
        wctime1_ = 0F;
        bitField0_ = (bitField0_ & ~0x20000000);
        wctime2_ = 0F;
        bitField0_ = (bitField0_ & ~0x40000000);
        wctime3_ = 0F;
        bitField0_ = (bitField0_ & ~0x80000000);
        wctime4_ = 0F;
        bitField1_ = (bitField1_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.conflict.onedb.server.MessageReturnProto.internal_static_MessageReturn_descriptor;
      }

      public com.conflict.onedb.server.MessageReturnProto.MessageReturn getDefaultInstanceForType() {
        return com.conflict.onedb.server.MessageReturnProto.MessageReturn.getDefaultInstance();
      }

      public com.conflict.onedb.server.MessageReturnProto.MessageReturn build() {
        com.conflict.onedb.server.MessageReturnProto.MessageReturn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.conflict.onedb.server.MessageReturnProto.MessageReturn buildPartial() {
        com.conflict.onedb.server.MessageReturnProto.MessageReturn result = new com.conflict.onedb.server.MessageReturnProto.MessageReturn(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgID_ = msgID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.qps_ = qps_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rtime1_ = rtime1_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rtime2_ = rtime2_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.rtime3_ = rtime3_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.rtime4_ = rtime4_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.rtime5_ = rtime5_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.tps_ = tps_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.secksucesscount_ = secksucesscount_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.nosecksucesscount_ = nosecksucesscount_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.seckfailcount_ = seckfailcount_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.noseckfailcount_ = noseckfailcount_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.queuefailcount_ = queuefailcount_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.wtime1_ = wtime1_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.wtime2_ = wtime2_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.wtime3_ = wtime3_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.wtime4_ = wtime4_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.wtime5_ = wtime5_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.wtime6_ = wtime6_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.wtime7_ = wtime7_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.wtime8_ = wtime8_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.rtime6_ = rtime6_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.rctime1_ = rctime1_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.rctime2_ = rctime2_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.rctime3_ = rctime3_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.rctime4_ = rctime4_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.rctime5_ = rctime5_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.rctime6_ = rctime6_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.wctime1_ = wctime1_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.wctime2_ = wctime2_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.wctime3_ = wctime3_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.wctime4_ = wctime4_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.conflict.onedb.server.MessageReturnProto.MessageReturn) {
          return mergeFrom((com.conflict.onedb.server.MessageReturnProto.MessageReturn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.conflict.onedb.server.MessageReturnProto.MessageReturn other) {
        if (other == com.conflict.onedb.server.MessageReturnProto.MessageReturn.getDefaultInstance()) return this;
        if (other.hasMsgID()) {
          setMsgID(other.getMsgID());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasQps()) {
          setQps(other.getQps());
        }
        if (other.hasRtime1()) {
          setRtime1(other.getRtime1());
        }
        if (other.hasRtime2()) {
          setRtime2(other.getRtime2());
        }
        if (other.hasRtime3()) {
          setRtime3(other.getRtime3());
        }
        if (other.hasRtime4()) {
          setRtime4(other.getRtime4());
        }
        if (other.hasRtime5()) {
          setRtime5(other.getRtime5());
        }
        if (other.hasTps()) {
          setTps(other.getTps());
        }
        if (other.hasSecksucesscount()) {
          setSecksucesscount(other.getSecksucesscount());
        }
        if (other.hasNosecksucesscount()) {
          setNosecksucesscount(other.getNosecksucesscount());
        }
        if (other.hasSeckfailcount()) {
          setSeckfailcount(other.getSeckfailcount());
        }
        if (other.hasNoseckfailcount()) {
          setNoseckfailcount(other.getNoseckfailcount());
        }
        if (other.hasQueuefailcount()) {
          setQueuefailcount(other.getQueuefailcount());
        }
        if (other.hasWtime1()) {
          setWtime1(other.getWtime1());
        }
        if (other.hasWtime2()) {
          setWtime2(other.getWtime2());
        }
        if (other.hasWtime3()) {
          setWtime3(other.getWtime3());
        }
        if (other.hasWtime4()) {
          setWtime4(other.getWtime4());
        }
        if (other.hasWtime5()) {
          setWtime5(other.getWtime5());
        }
        if (other.hasWtime6()) {
          setWtime6(other.getWtime6());
        }
        if (other.hasWtime7()) {
          setWtime7(other.getWtime7());
        }
        if (other.hasWtime8()) {
          setWtime8(other.getWtime8());
        }
        if (other.hasRtime6()) {
          setRtime6(other.getRtime6());
        }
        if (other.hasRctime1()) {
          setRctime1(other.getRctime1());
        }
        if (other.hasRctime2()) {
          setRctime2(other.getRctime2());
        }
        if (other.hasRctime3()) {
          setRctime3(other.getRctime3());
        }
        if (other.hasRctime4()) {
          setRctime4(other.getRctime4());
        }
        if (other.hasRctime5()) {
          setRctime5(other.getRctime5());
        }
        if (other.hasRctime6()) {
          setRctime6(other.getRctime6());
        }
        if (other.hasWctime1()) {
          setWctime1(other.getWctime1());
        }
        if (other.hasWctime2()) {
          setWctime2(other.getWctime2());
        }
        if (other.hasWctime3()) {
          setWctime3(other.getWctime3());
        }
        if (other.hasWctime4()) {
          setWctime4(other.getWctime4());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMsgID()) {
          
          return false;
        }
        if (!hasTimestamp()) {
          
          return false;
        }
        if (!hasQps()) {
          
          return false;
        }
        if (!hasRtime1()) {
          
          return false;
        }
        if (!hasRtime2()) {
          
          return false;
        }
        if (!hasRtime3()) {
          
          return false;
        }
        if (!hasRtime4()) {
          
          return false;
        }
        if (!hasRtime5()) {
          
          return false;
        }
        if (!hasTps()) {
          
          return false;
        }
        if (!hasSecksucesscount()) {
          
          return false;
        }
        if (!hasNosecksucesscount()) {
          
          return false;
        }
        if (!hasSeckfailcount()) {
          
          return false;
        }
        if (!hasNoseckfailcount()) {
          
          return false;
        }
        if (!hasQueuefailcount()) {
          
          return false;
        }
        if (!hasWtime1()) {
          
          return false;
        }
        if (!hasWtime2()) {
          
          return false;
        }
        if (!hasWtime3()) {
          
          return false;
        }
        if (!hasWtime4()) {
          
          return false;
        }
        if (!hasWtime5()) {
          
          return false;
        }
        if (!hasWtime6()) {
          
          return false;
        }
        if (!hasWtime7()) {
          
          return false;
        }
        if (!hasWtime8()) {
          
          return false;
        }
        if (!hasRtime6()) {
          
          return false;
        }
        if (!hasRctime1()) {
          
          return false;
        }
        if (!hasRctime2()) {
          
          return false;
        }
        if (!hasRctime3()) {
          
          return false;
        }
        if (!hasRctime4()) {
          
          return false;
        }
        if (!hasRctime5()) {
          
          return false;
        }
        if (!hasRctime6()) {
          
          return false;
        }
        if (!hasWctime1()) {
          
          return false;
        }
        if (!hasWctime2()) {
          
          return false;
        }
        if (!hasWctime3()) {
          
          return false;
        }
        if (!hasWctime4()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.conflict.onedb.server.MessageReturnProto.MessageReturn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.conflict.onedb.server.MessageReturnProto.MessageReturn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      // required int32 msgID = 1;
      private int msgID_ ;
      /**
       * <code>required int32 msgID = 1;</code>
       *
       * <pre>
       *信息的唯一标示
       * </pre>
       */
      public boolean hasMsgID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 msgID = 1;</code>
       *
       * <pre>
       *信息的唯一标示
       * </pre>
       */
      public int getMsgID() {
        return msgID_;
      }
      /**
       * <code>required int32 msgID = 1;</code>
       *
       * <pre>
       *信息的唯一标示
       * </pre>
       */
      public Builder setMsgID(int value) {
        bitField0_ |= 0x00000001;
        msgID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 msgID = 1;</code>
       *
       * <pre>
       *信息的唯一标示
       * </pre>
       */
      public Builder clearMsgID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgID_ = 0;
        onChanged();
        return this;
      }

      // required int64 timestamp = 2;
      private long timestamp_ ;
      /**
       * <code>required int64 timestamp = 2;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 timestamp = 2;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required int64 timestamp = 2;</code>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 timestamp = 2;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      // required float qps = 3;
      private float qps_ ;
      /**
       * <code>required float qps = 3;</code>
       */
      public boolean hasQps() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float qps = 3;</code>
       */
      public float getQps() {
        return qps_;
      }
      /**
       * <code>required float qps = 3;</code>
       */
      public Builder setQps(float value) {
        bitField0_ |= 0x00000004;
        qps_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float qps = 3;</code>
       */
      public Builder clearQps() {
        bitField0_ = (bitField0_ & ~0x00000004);
        qps_ = 0F;
        onChanged();
        return this;
      }

      // required float rtime1 = 4;
      private float rtime1_ ;
      /**
       * <code>required float rtime1 = 4;</code>
       */
      public boolean hasRtime1() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required float rtime1 = 4;</code>
       */
      public float getRtime1() {
        return rtime1_;
      }
      /**
       * <code>required float rtime1 = 4;</code>
       */
      public Builder setRtime1(float value) {
        bitField0_ |= 0x00000008;
        rtime1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float rtime1 = 4;</code>
       */
      public Builder clearRtime1() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rtime1_ = 0F;
        onChanged();
        return this;
      }

      // required float rtime2 = 5;
      private float rtime2_ ;
      /**
       * <code>required float rtime2 = 5;</code>
       */
      public boolean hasRtime2() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required float rtime2 = 5;</code>
       */
      public float getRtime2() {
        return rtime2_;
      }
      /**
       * <code>required float rtime2 = 5;</code>
       */
      public Builder setRtime2(float value) {
        bitField0_ |= 0x00000010;
        rtime2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float rtime2 = 5;</code>
       */
      public Builder clearRtime2() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rtime2_ = 0F;
        onChanged();
        return this;
      }

      // required float rtime3 = 6;
      private float rtime3_ ;
      /**
       * <code>required float rtime3 = 6;</code>
       */
      public boolean hasRtime3() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required float rtime3 = 6;</code>
       */
      public float getRtime3() {
        return rtime3_;
      }
      /**
       * <code>required float rtime3 = 6;</code>
       */
      public Builder setRtime3(float value) {
        bitField0_ |= 0x00000020;
        rtime3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float rtime3 = 6;</code>
       */
      public Builder clearRtime3() {
        bitField0_ = (bitField0_ & ~0x00000020);
        rtime3_ = 0F;
        onChanged();
        return this;
      }

      // required float rtime4 = 7;
      private float rtime4_ ;
      /**
       * <code>required float rtime4 = 7;</code>
       */
      public boolean hasRtime4() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required float rtime4 = 7;</code>
       */
      public float getRtime4() {
        return rtime4_;
      }
      /**
       * <code>required float rtime4 = 7;</code>
       */
      public Builder setRtime4(float value) {
        bitField0_ |= 0x00000040;
        rtime4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float rtime4 = 7;</code>
       */
      public Builder clearRtime4() {
        bitField0_ = (bitField0_ & ~0x00000040);
        rtime4_ = 0F;
        onChanged();
        return this;
      }

      // required float rtime5 = 8;
      private float rtime5_ ;
      /**
       * <code>required float rtime5 = 8;</code>
       */
      public boolean hasRtime5() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required float rtime5 = 8;</code>
       */
      public float getRtime5() {
        return rtime5_;
      }
      /**
       * <code>required float rtime5 = 8;</code>
       */
      public Builder setRtime5(float value) {
        bitField0_ |= 0x00000080;
        rtime5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float rtime5 = 8;</code>
       */
      public Builder clearRtime5() {
        bitField0_ = (bitField0_ & ~0x00000080);
        rtime5_ = 0F;
        onChanged();
        return this;
      }

      // required float tps = 9;
      private float tps_ ;
      /**
       * <code>required float tps = 9;</code>
       */
      public boolean hasTps() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required float tps = 9;</code>
       */
      public float getTps() {
        return tps_;
      }
      /**
       * <code>required float tps = 9;</code>
       */
      public Builder setTps(float value) {
        bitField0_ |= 0x00000100;
        tps_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float tps = 9;</code>
       */
      public Builder clearTps() {
        bitField0_ = (bitField0_ & ~0x00000100);
        tps_ = 0F;
        onChanged();
        return this;
      }

      // required int64 secksucesscount = 10;
      private long secksucesscount_ ;
      /**
       * <code>required int64 secksucesscount = 10;</code>
       */
      public boolean hasSecksucesscount() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int64 secksucesscount = 10;</code>
       */
      public long getSecksucesscount() {
        return secksucesscount_;
      }
      /**
       * <code>required int64 secksucesscount = 10;</code>
       */
      public Builder setSecksucesscount(long value) {
        bitField0_ |= 0x00000200;
        secksucesscount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 secksucesscount = 10;</code>
       */
      public Builder clearSecksucesscount() {
        bitField0_ = (bitField0_ & ~0x00000200);
        secksucesscount_ = 0L;
        onChanged();
        return this;
      }

      // required int64 nosecksucesscount = 11;
      private long nosecksucesscount_ ;
      /**
       * <code>required int64 nosecksucesscount = 11;</code>
       */
      public boolean hasNosecksucesscount() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int64 nosecksucesscount = 11;</code>
       */
      public long getNosecksucesscount() {
        return nosecksucesscount_;
      }
      /**
       * <code>required int64 nosecksucesscount = 11;</code>
       */
      public Builder setNosecksucesscount(long value) {
        bitField0_ |= 0x00000400;
        nosecksucesscount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 nosecksucesscount = 11;</code>
       */
      public Builder clearNosecksucesscount() {
        bitField0_ = (bitField0_ & ~0x00000400);
        nosecksucesscount_ = 0L;
        onChanged();
        return this;
      }

      // required int64 seckfailcount = 12;
      private long seckfailcount_ ;
      /**
       * <code>required int64 seckfailcount = 12;</code>
       */
      public boolean hasSeckfailcount() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int64 seckfailcount = 12;</code>
       */
      public long getSeckfailcount() {
        return seckfailcount_;
      }
      /**
       * <code>required int64 seckfailcount = 12;</code>
       */
      public Builder setSeckfailcount(long value) {
        bitField0_ |= 0x00000800;
        seckfailcount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 seckfailcount = 12;</code>
       */
      public Builder clearSeckfailcount() {
        bitField0_ = (bitField0_ & ~0x00000800);
        seckfailcount_ = 0L;
        onChanged();
        return this;
      }

      // required int64 noseckfailcount = 13;
      private long noseckfailcount_ ;
      /**
       * <code>required int64 noseckfailcount = 13;</code>
       */
      public boolean hasNoseckfailcount() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required int64 noseckfailcount = 13;</code>
       */
      public long getNoseckfailcount() {
        return noseckfailcount_;
      }
      /**
       * <code>required int64 noseckfailcount = 13;</code>
       */
      public Builder setNoseckfailcount(long value) {
        bitField0_ |= 0x00001000;
        noseckfailcount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 noseckfailcount = 13;</code>
       */
      public Builder clearNoseckfailcount() {
        bitField0_ = (bitField0_ & ~0x00001000);
        noseckfailcount_ = 0L;
        onChanged();
        return this;
      }

      // required int64 queuefailcount = 14;
      private long queuefailcount_ ;
      /**
       * <code>required int64 queuefailcount = 14;</code>
       */
      public boolean hasQueuefailcount() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required int64 queuefailcount = 14;</code>
       */
      public long getQueuefailcount() {
        return queuefailcount_;
      }
      /**
       * <code>required int64 queuefailcount = 14;</code>
       */
      public Builder setQueuefailcount(long value) {
        bitField0_ |= 0x00002000;
        queuefailcount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 queuefailcount = 14;</code>
       */
      public Builder clearQueuefailcount() {
        bitField0_ = (bitField0_ & ~0x00002000);
        queuefailcount_ = 0L;
        onChanged();
        return this;
      }

      // required float wtime1 = 15;
      private float wtime1_ ;
      /**
       * <code>required float wtime1 = 15;</code>
       */
      public boolean hasWtime1() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required float wtime1 = 15;</code>
       */
      public float getWtime1() {
        return wtime1_;
      }
      /**
       * <code>required float wtime1 = 15;</code>
       */
      public Builder setWtime1(float value) {
        bitField0_ |= 0x00004000;
        wtime1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float wtime1 = 15;</code>
       */
      public Builder clearWtime1() {
        bitField0_ = (bitField0_ & ~0x00004000);
        wtime1_ = 0F;
        onChanged();
        return this;
      }

      // required float wtime2 = 16;
      private float wtime2_ ;
      /**
       * <code>required float wtime2 = 16;</code>
       */
      public boolean hasWtime2() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required float wtime2 = 16;</code>
       */
      public float getWtime2() {
        return wtime2_;
      }
      /**
       * <code>required float wtime2 = 16;</code>
       */
      public Builder setWtime2(float value) {
        bitField0_ |= 0x00008000;
        wtime2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float wtime2 = 16;</code>
       */
      public Builder clearWtime2() {
        bitField0_ = (bitField0_ & ~0x00008000);
        wtime2_ = 0F;
        onChanged();
        return this;
      }

      // required float wtime3 = 17;
      private float wtime3_ ;
      /**
       * <code>required float wtime3 = 17;</code>
       */
      public boolean hasWtime3() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required float wtime3 = 17;</code>
       */
      public float getWtime3() {
        return wtime3_;
      }
      /**
       * <code>required float wtime3 = 17;</code>
       */
      public Builder setWtime3(float value) {
        bitField0_ |= 0x00010000;
        wtime3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float wtime3 = 17;</code>
       */
      public Builder clearWtime3() {
        bitField0_ = (bitField0_ & ~0x00010000);
        wtime3_ = 0F;
        onChanged();
        return this;
      }

      // required float wtime4 = 18;
      private float wtime4_ ;
      /**
       * <code>required float wtime4 = 18;</code>
       */
      public boolean hasWtime4() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>required float wtime4 = 18;</code>
       */
      public float getWtime4() {
        return wtime4_;
      }
      /**
       * <code>required float wtime4 = 18;</code>
       */
      public Builder setWtime4(float value) {
        bitField0_ |= 0x00020000;
        wtime4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float wtime4 = 18;</code>
       */
      public Builder clearWtime4() {
        bitField0_ = (bitField0_ & ~0x00020000);
        wtime4_ = 0F;
        onChanged();
        return this;
      }

      // required float wtime5 = 19;
      private float wtime5_ ;
      /**
       * <code>required float wtime5 = 19;</code>
       */
      public boolean hasWtime5() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>required float wtime5 = 19;</code>
       */
      public float getWtime5() {
        return wtime5_;
      }
      /**
       * <code>required float wtime5 = 19;</code>
       */
      public Builder setWtime5(float value) {
        bitField0_ |= 0x00040000;
        wtime5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float wtime5 = 19;</code>
       */
      public Builder clearWtime5() {
        bitField0_ = (bitField0_ & ~0x00040000);
        wtime5_ = 0F;
        onChanged();
        return this;
      }

      // required float wtime6 = 20;
      private float wtime6_ ;
      /**
       * <code>required float wtime6 = 20;</code>
       */
      public boolean hasWtime6() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>required float wtime6 = 20;</code>
       */
      public float getWtime6() {
        return wtime6_;
      }
      /**
       * <code>required float wtime6 = 20;</code>
       */
      public Builder setWtime6(float value) {
        bitField0_ |= 0x00080000;
        wtime6_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float wtime6 = 20;</code>
       */
      public Builder clearWtime6() {
        bitField0_ = (bitField0_ & ~0x00080000);
        wtime6_ = 0F;
        onChanged();
        return this;
      }

      // required float wtime7 = 21;
      private float wtime7_ ;
      /**
       * <code>required float wtime7 = 21;</code>
       */
      public boolean hasWtime7() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>required float wtime7 = 21;</code>
       */
      public float getWtime7() {
        return wtime7_;
      }
      /**
       * <code>required float wtime7 = 21;</code>
       */
      public Builder setWtime7(float value) {
        bitField0_ |= 0x00100000;
        wtime7_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float wtime7 = 21;</code>
       */
      public Builder clearWtime7() {
        bitField0_ = (bitField0_ & ~0x00100000);
        wtime7_ = 0F;
        onChanged();
        return this;
      }

      // required float wtime8 = 22;
      private float wtime8_ ;
      /**
       * <code>required float wtime8 = 22;</code>
       */
      public boolean hasWtime8() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>required float wtime8 = 22;</code>
       */
      public float getWtime8() {
        return wtime8_;
      }
      /**
       * <code>required float wtime8 = 22;</code>
       */
      public Builder setWtime8(float value) {
        bitField0_ |= 0x00200000;
        wtime8_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float wtime8 = 22;</code>
       */
      public Builder clearWtime8() {
        bitField0_ = (bitField0_ & ~0x00200000);
        wtime8_ = 0F;
        onChanged();
        return this;
      }

      // required float rtime6 = 23;
      private float rtime6_ ;
      /**
       * <code>required float rtime6 = 23;</code>
       */
      public boolean hasRtime6() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>required float rtime6 = 23;</code>
       */
      public float getRtime6() {
        return rtime6_;
      }
      /**
       * <code>required float rtime6 = 23;</code>
       */
      public Builder setRtime6(float value) {
        bitField0_ |= 0x00400000;
        rtime6_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float rtime6 = 23;</code>
       */
      public Builder clearRtime6() {
        bitField0_ = (bitField0_ & ~0x00400000);
        rtime6_ = 0F;
        onChanged();
        return this;
      }

      // required float rctime1 = 24;
      private float rctime1_ ;
      /**
       * <code>required float rctime1 = 24;</code>
       */
      public boolean hasRctime1() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>required float rctime1 = 24;</code>
       */
      public float getRctime1() {
        return rctime1_;
      }
      /**
       * <code>required float rctime1 = 24;</code>
       */
      public Builder setRctime1(float value) {
        bitField0_ |= 0x00800000;
        rctime1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float rctime1 = 24;</code>
       */
      public Builder clearRctime1() {
        bitField0_ = (bitField0_ & ~0x00800000);
        rctime1_ = 0F;
        onChanged();
        return this;
      }

      // required float rctime2 = 25;
      private float rctime2_ ;
      /**
       * <code>required float rctime2 = 25;</code>
       */
      public boolean hasRctime2() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>required float rctime2 = 25;</code>
       */
      public float getRctime2() {
        return rctime2_;
      }
      /**
       * <code>required float rctime2 = 25;</code>
       */
      public Builder setRctime2(float value) {
        bitField0_ |= 0x01000000;
        rctime2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float rctime2 = 25;</code>
       */
      public Builder clearRctime2() {
        bitField0_ = (bitField0_ & ~0x01000000);
        rctime2_ = 0F;
        onChanged();
        return this;
      }

      // required float rctime3 = 26;
      private float rctime3_ ;
      /**
       * <code>required float rctime3 = 26;</code>
       */
      public boolean hasRctime3() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>required float rctime3 = 26;</code>
       */
      public float getRctime3() {
        return rctime3_;
      }
      /**
       * <code>required float rctime3 = 26;</code>
       */
      public Builder setRctime3(float value) {
        bitField0_ |= 0x02000000;
        rctime3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float rctime3 = 26;</code>
       */
      public Builder clearRctime3() {
        bitField0_ = (bitField0_ & ~0x02000000);
        rctime3_ = 0F;
        onChanged();
        return this;
      }

      // required float rctime4 = 27;
      private float rctime4_ ;
      /**
       * <code>required float rctime4 = 27;</code>
       */
      public boolean hasRctime4() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>required float rctime4 = 27;</code>
       */
      public float getRctime4() {
        return rctime4_;
      }
      /**
       * <code>required float rctime4 = 27;</code>
       */
      public Builder setRctime4(float value) {
        bitField0_ |= 0x04000000;
        rctime4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float rctime4 = 27;</code>
       */
      public Builder clearRctime4() {
        bitField0_ = (bitField0_ & ~0x04000000);
        rctime4_ = 0F;
        onChanged();
        return this;
      }

      // required float rctime5 = 28;
      private float rctime5_ ;
      /**
       * <code>required float rctime5 = 28;</code>
       */
      public boolean hasRctime5() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>required float rctime5 = 28;</code>
       */
      public float getRctime5() {
        return rctime5_;
      }
      /**
       * <code>required float rctime5 = 28;</code>
       */
      public Builder setRctime5(float value) {
        bitField0_ |= 0x08000000;
        rctime5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float rctime5 = 28;</code>
       */
      public Builder clearRctime5() {
        bitField0_ = (bitField0_ & ~0x08000000);
        rctime5_ = 0F;
        onChanged();
        return this;
      }

      // required float rctime6 = 29;
      private float rctime6_ ;
      /**
       * <code>required float rctime6 = 29;</code>
       */
      public boolean hasRctime6() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>required float rctime6 = 29;</code>
       */
      public float getRctime6() {
        return rctime6_;
      }
      /**
       * <code>required float rctime6 = 29;</code>
       */
      public Builder setRctime6(float value) {
        bitField0_ |= 0x10000000;
        rctime6_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float rctime6 = 29;</code>
       */
      public Builder clearRctime6() {
        bitField0_ = (bitField0_ & ~0x10000000);
        rctime6_ = 0F;
        onChanged();
        return this;
      }

      // required float wctime1 = 30;
      private float wctime1_ ;
      /**
       * <code>required float wctime1 = 30;</code>
       */
      public boolean hasWctime1() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>required float wctime1 = 30;</code>
       */
      public float getWctime1() {
        return wctime1_;
      }
      /**
       * <code>required float wctime1 = 30;</code>
       */
      public Builder setWctime1(float value) {
        bitField0_ |= 0x20000000;
        wctime1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float wctime1 = 30;</code>
       */
      public Builder clearWctime1() {
        bitField0_ = (bitField0_ & ~0x20000000);
        wctime1_ = 0F;
        onChanged();
        return this;
      }

      // required float wctime2 = 31;
      private float wctime2_ ;
      /**
       * <code>required float wctime2 = 31;</code>
       */
      public boolean hasWctime2() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>required float wctime2 = 31;</code>
       */
      public float getWctime2() {
        return wctime2_;
      }
      /**
       * <code>required float wctime2 = 31;</code>
       */
      public Builder setWctime2(float value) {
        bitField0_ |= 0x40000000;
        wctime2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float wctime2 = 31;</code>
       */
      public Builder clearWctime2() {
        bitField0_ = (bitField0_ & ~0x40000000);
        wctime2_ = 0F;
        onChanged();
        return this;
      }

      // required float wctime3 = 32;
      private float wctime3_ ;
      /**
       * <code>required float wctime3 = 32;</code>
       */
      public boolean hasWctime3() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>required float wctime3 = 32;</code>
       */
      public float getWctime3() {
        return wctime3_;
      }
      /**
       * <code>required float wctime3 = 32;</code>
       */
      public Builder setWctime3(float value) {
        bitField0_ |= 0x80000000;
        wctime3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float wctime3 = 32;</code>
       */
      public Builder clearWctime3() {
        bitField0_ = (bitField0_ & ~0x80000000);
        wctime3_ = 0F;
        onChanged();
        return this;
      }

      // required float wctime4 = 33;
      private float wctime4_ ;
      /**
       * <code>required float wctime4 = 33;</code>
       */
      public boolean hasWctime4() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float wctime4 = 33;</code>
       */
      public float getWctime4() {
        return wctime4_;
      }
      /**
       * <code>required float wctime4 = 33;</code>
       */
      public Builder setWctime4(float value) {
        bitField1_ |= 0x00000001;
        wctime4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float wctime4 = 33;</code>
       */
      public Builder clearWctime4() {
        bitField1_ = (bitField1_ & ~0x00000001);
        wctime4_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MessageReturn)
    }

    static {
      defaultInstance = new MessageReturn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MessageReturn)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MessageReturn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MessageReturn_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023PersonFactory.proto\"\321\004\n\rMessageReturn\022" +
      "\r\n\005msgID\030\001 \002(\005\022\021\n\ttimestamp\030\002 \002(\003\022\013\n\003qps" +
      "\030\003 \002(\002\022\016\n\006rtime1\030\004 \002(\002\022\016\n\006rtime2\030\005 \002(\002\022\016" +
      "\n\006rtime3\030\006 \002(\002\022\016\n\006rtime4\030\007 \002(\002\022\016\n\006rtime5" +
      "\030\010 \002(\002\022\013\n\003tps\030\t \002(\002\022\027\n\017secksucesscount\030\n" +
      " \002(\003\022\031\n\021nosecksucesscount\030\013 \002(\003\022\025\n\rseckf" +
      "ailcount\030\014 \002(\003\022\027\n\017noseckfailcount\030\r \002(\003\022" +
      "\026\n\016queuefailcount\030\016 \002(\003\022\016\n\006wtime1\030\017 \002(\002\022" +
      "\016\n\006wtime2\030\020 \002(\002\022\016\n\006wtime3\030\021 \002(\002\022\016\n\006wtime" +
      "4\030\022 \002(\002\022\016\n\006wtime5\030\023 \002(\002\022\016\n\006wtime6\030\024 \002(\002\022",
      "\016\n\006wtime7\030\025 \002(\002\022\016\n\006wtime8\030\026 \002(\002\022\016\n\006rtime" +
      "6\030\027 \002(\002\022\017\n\007rctime1\030\030 \002(\002\022\017\n\007rctime2\030\031 \002(" +
      "\002\022\017\n\007rctime3\030\032 \002(\002\022\017\n\007rctime4\030\033 \002(\002\022\017\n\007r" +
      "ctime5\030\034 \002(\002\022\017\n\007rctime6\030\035 \002(\002\022\017\n\007wctime1" +
      "\030\036 \002(\002\022\017\n\007wctime2\030\037 \002(\002\022\017\n\007wctime3\030  \002(\002" +
      "\022\017\n\007wctime4\030! \002(\002B/\n\031com.conflict.onedb." +
      "serverB\022MessageReturnProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_MessageReturn_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_MessageReturn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MessageReturn_descriptor,
              new java.lang.String[] { "MsgID", "Timestamp", "Qps", "Rtime1", "Rtime2", "Rtime3", "Rtime4", "Rtime5", "Tps", "Secksucesscount", "Nosecksucesscount", "Seckfailcount", "Noseckfailcount", "Queuefailcount", "Wtime1", "Wtime2", "Wtime3", "Wtime4", "Wtime5", "Wtime6", "Wtime7", "Wtime8", "Rtime6", "Rctime1", "Rctime2", "Rctime3", "Rctime4", "Rctime5", "Rctime6", "Wctime1", "Wctime2", "Wctime3", "Wctime4", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
